{
  "version": 3,
  "sources": ["src/environments/environments.ts", "src/app/services/api.ts"],
  "sourcesContent": ["export const environment = {\n  production: false,        // Set to `true` for production environment\n  apiUrl: 'http://localhost:8000',  // Your FastAPI backend URL during development\n};\n", "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environments';\n\nexport interface Category {\n  id: number;\n  name: string;\n  description?: string;\n}\n\nexport interface Product {\n  id: number;\n  name: string;\n  description?: string;\n  price: number;\n  stock_quantity: number;\n  category_id: number;\n  discounted_price?: number;\n}\n\nexport enum OrderStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  SHIPPED = 'shipped',\n  DELIVERED = 'delivered'\n}\n\nexport interface Order {\n  id: number;\n  user_id: number;\n  total_amount: number;\n  status: OrderStatus;\n  created_at: string;\n  items: { product_id: number; quantity: number; price: number }[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Api {\n  private apiUrl = environment.apiUrl; // Assuming you have the FastAPI URL here\n\n  constructor(private http: HttpClient) {}\n\n  // Categories API\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(`${this.apiUrl}/categories`);\n  }\n\n  addCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(`${this.apiUrl}/categories`, category);\n  }\n\n  updateCategory(id: number, category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.apiUrl}/categories/${id}`, category);\n  }\n\n  deleteCategory(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/categories/${id}`);\n  }\n\n  // Products API\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.apiUrl}/products`);\n  }\n\n  addProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${this.apiUrl}/products`, product);\n  }\n\n  updateProduct(id: number, product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/products/${id}`, product);\n  }\n\n  deleteProduct(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/products/${id}`);\n  }\n\n  // Orders API\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(`${this.apiUrl}/orders`);\n  }\n\n  updateOrderStatus(id: number, status: OrderStatus): Observable<Order> {\n    return this.http.put<Order>(`${this.apiUrl}/orders/${id}`, { status });\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(`${this.apiUrl}/orders`, order);\n  }\n  deleteOrder(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/orders/${id}`);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,IAAa;AAAb;;;AAAO,IAAM,cAAc;MACzB,YAAY;;MACZ,QAAQ;;;;;;;ICmBE,aAmBC;;;;;AAxCb;AAEA;AACA;AAkBA,KAAA,SAAYA,cAAW;AACrB,MAAAA,aAAA,SAAA,IAAA;AACA,MAAAA,aAAA,YAAA,IAAA;AACA,MAAAA,aAAA,SAAA,IAAA;AACA,MAAAA,aAAA,WAAA,IAAA;IACF,GALY,gBAAA,cAAW,CAAA,EAAA;AAmBhB,IAAM,MAAN,MAAMC,KAAG;MAGM;MAFZ,SAAS,YAAY;;MAE7B,YAAoB,MAAgB;AAAhB,aAAA,OAAA;MAAmB;;MAGvC,gBAAa;AACX,eAAO,KAAK,KAAK,IAAgB,GAAG,KAAK,MAAM,aAAa;MAC9D;MAEA,YAAY,UAAkB;AAC5B,eAAO,KAAK,KAAK,KAAe,GAAG,KAAK,MAAM,eAAe,QAAQ;MACvE;MAEA,eAAe,IAAY,UAAkB;AAC3C,eAAO,KAAK,KAAK,IAAc,GAAG,KAAK,MAAM,eAAe,EAAE,IAAI,QAAQ;MAC5E;MAEA,eAAe,IAAU;AACvB,eAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,eAAe,EAAE,EAAE;MACjE;;MAGA,cAAW;AACT,eAAO,KAAK,KAAK,IAAe,GAAG,KAAK,MAAM,WAAW;MAC3D;MAEA,WAAW,SAAgB;AACzB,eAAO,KAAK,KAAK,KAAc,GAAG,KAAK,MAAM,aAAa,OAAO;MACnE;MAEA,cAAc,IAAY,SAAgB;AACxC,eAAO,KAAK,KAAK,IAAa,GAAG,KAAK,MAAM,aAAa,EAAE,IAAI,OAAO;MACxE;MAEA,cAAc,IAAU;AACtB,eAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,aAAa,EAAE,EAAE;MAC/D;;MAGA,YAAS;AACP,eAAO,KAAK,KAAK,IAAa,GAAG,KAAK,MAAM,SAAS;MACvD;MAEA,kBAAkB,IAAY,QAAmB;AAC/C,eAAO,KAAK,KAAK,IAAW,GAAG,KAAK,MAAM,WAAW,EAAE,IAAI,EAAE,OAAM,CAAE;MACvE;MAEA,YAAY,OAAY;AACtB,eAAO,KAAK,KAAK,KAAY,GAAG,KAAK,MAAM,WAAW,KAAK;MAC7D;MACA,YAAY,IAAU;AACpB,eAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,WAAW,EAAE,EAAE;MAC7D;;;;;AArDW,UAAG,WAAA;MAHf,WAAW;QACV,YAAY;OACb;OACY,GAAG;;;",
  "names": ["OrderStatus", "Api"]
}
