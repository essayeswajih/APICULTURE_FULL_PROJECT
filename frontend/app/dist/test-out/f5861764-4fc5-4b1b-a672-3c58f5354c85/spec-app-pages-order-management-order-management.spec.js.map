{
  "version": 3,
  "sources": ["angular:jit:template:src/app/pages/order-management/order-management.html", "angular:jit:style:src/app/pages/order-management/order-management.scss", "src/app/pages/order-management/order-management.ts", "src/app/pages/order-management/order-management.spec.ts"],
  "sourcesContent": ["<div class=\"container py-5\">\n  <h2>Order Management</h2>\n  <div class=\"row\">\n    @for (order of orders; track order.id) {\n      <div class=\"col-md-6\">\n        <div class=\"card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Order #{{ order.id }}</h5>\n            <p class=\"card-text\">User ID: {{ order.user_id }}</p>\n            <p class=\"card-text\">Total: ${{ order.total_amount | number:'1.2-2' }}</p>\n            <p class=\"card-text\">Status: {{ order.status | titlecase }}</p>\n            <p class=\"card-text\">Created: {{ order.created_at | date:'short' }}</p>\n            <div class=\"mb-3\">\n              <label for=\"status-{{ order.id }}\" class=\"form-label\">Update Status</label>\n              <select class=\"form-control\" id=\"status-{{ order.id }}\" name=\"status\" [(ngModel)]=\"order.status\" (ngModelChange)=\"updateOrderStatus(order.id, $event)\">\n                @for (status of orderStatuses; track status) {\n                  <option [value]=\"status\">{{ status | titlecase }}</option>\n                }\n              </select>\n            </div>\n            <button class=\"btn btn-danger\" (click)=\"deleteOrder(order.id)\">Delete</button>\n          </div>\n        </div>\n      </div>\n    }\n  </div>\n</div>", "/* src/app/pages/order-management/order-management.scss */\nbody {\n  background-color: #fff8e1;\n  font-family: \"Roboto\", sans-serif;\n}\n.hero {\n  background-color: rgba(255, 247, 216, 0.4941176471);\n}\nh2 {\n  color: #d97706;\n}\n.card-title {\n  color: #15803d;\n}\n.card-text {\n  color: #333;\n}\n.card-img-top {\n  height: 200px;\n  object-fit: cover;\n}\n.text-success {\n  color: #15803d !important;\n}\n.text-success:hover {\n  color: #14532d !important;\n}\n.btn-outline-warning {\n  border-color: #d97706;\n  color: #d97706;\n}\n.btn-outline-warning:hover {\n  background-color: #d97706;\n  color: #fff8e1;\n}\n.btn-warning {\n  background-color: #d97706;\n  border-color: #d97706;\n}\n.btn-warning:hover {\n  background-color: #14532d;\n  border-color: #14532d;\n  color: #fff8e1;\n}\n#beeBox,\n#beeBox1 {\n  position: absolute;\n  width: 95vw;\n  height: 100vh;\n  overflow: hidden;\n  z-index: 0;\n  top: 100px;\n}\n#beeBox {\n  left: 0;\n}\n#beeBox1 {\n  right: 0;\n}\n#bee,\n#bee1 {\n  width: 125px;\n  box-sizing: border-box;\n  will-change: transform;\n  position: absolute;\n}\n#bee1 {\n  right: 0;\n  top: 30vh;\n}\n/*# sourceMappingURL=order-management.css.map */\n", "import { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { Api, Order, OrderStatus } from '../../services/api';\nimport { FormsModule } from '@angular/forms';\nimport { gsap } from 'gsap';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-order-management',\n  imports: [FormsModule,CommonModule],\n  templateUrl: './order-management.html',\n  styleUrl: './order-management.scss'\n})\nexport class OrderManagement implements OnInit {\n  orders: Order[] = [];\n  orderStatuses = Object.values(OrderStatus);\n\n  constructor(\n    private apiService: Api,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    this.loadOrders();\n  }\n\n  updateOrderStatus(id: number, status: OrderStatus) {\n    this.apiService.updateOrderStatus(id, status).subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  deleteOrder(id: number) {\n    this.apiService.deleteOrder(id).subscribe(() => this.loadOrders());\n  }\n\n  private loadOrders() {\n    this.apiService.getOrders().subscribe(orders => {\n      this.orders = orders;\n      if (isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          const cards = document.querySelectorAll('.card');\n          if (cards.length > 0) {\n            gsap.from(cards, { opacity: 0, y: 20, duration: 0.5, stagger: 0.2 });\n          }\n        }, 0);\n      }\n    });\n  }\n}", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { OrderManagement } from './order-management';\n\ndescribe('OrderManagement', () => {\n  let component: OrderManagement;\n  let fixture: ComponentFixture<OrderManagement>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [OrderManagement]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(OrderManagement);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,yBAAA;AAAA;AAAA,IAAAD,4BAAA;AAAA;AAAA;;;ICYa;;;;;;;AAZb;AACA;AACA;AACA;AACA;AAQO,IAAM,kBAAN,MAAME,iBAAe;MAKhB;MACqB;MAL/B,SAAkB,CAAA;MAClB,gBAAgB,OAAO,OAAO,WAAW;MAEzC,YACU,YACqB,YAAkB;AADvC,aAAA,aAAA;AACqB,aAAA,aAAA;MAC5B;MAEH,WAAQ;AACN,aAAK,WAAU;MACjB;MAEA,kBAAkB,IAAY,QAAmB;AAC/C,aAAK,WAAW,kBAAkB,IAAI,MAAM,EAAE,UAAU,MAAK;AAC3D,eAAK,WAAU;QACjB,CAAC;MACH;MAEA,YAAY,IAAU;AACpB,aAAK,WAAW,YAAY,EAAE,EAAE,UAAU,MAAM,KAAK,WAAU,CAAE;MACnE;MAEQ,aAAU;AAChB,aAAK,WAAW,UAAS,EAAG,UAAU,YAAS;AAC7C,eAAK,SAAS;AACd,cAAI,kBAAkB,KAAK,UAAU,GAAG;AACtC,uBAAW,MAAK;AACd,oBAAM,QAAQ,SAAS,iBAAiB,OAAO;AAC/C,kBAAI,MAAM,SAAS,GAAG;AACpB,4BAAK,KAAK,OAAO,EAAE,SAAS,GAAG,GAAG,IAAI,UAAU,KAAK,SAAS,IAAG,CAAE;cACrE;YACF,GAAG,CAAC;UACN;QACF,CAAC;MACH;;;6CA7BG,QAAM,MAAA,CAAC,WAAW,EAAA,CAAA,EAAA;;;AANV,sBAAe,WAAA;MAN3B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAY,YAAY;QAClC,UAAA;;OAED;OACY,eAAe;;;;;ACZ5B;;;AAEA,IAAAC;AAEA,aAAS,mBAAmB,MAAK;AAC/B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,eAAe;SAC1B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,eAAe;AACjD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["order_management_default", "init_order_management", "OrderManagement", "init_order_management"]
}
