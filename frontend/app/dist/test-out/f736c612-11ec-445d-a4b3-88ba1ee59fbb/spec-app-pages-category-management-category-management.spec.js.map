{
  "version": 3,
  "sources": ["angular:jit:template:src/app/pages/category-management/category-management.html", "angular:jit:style:src/app/pages/category-management/category-management.scss", "src/app/pages/category-management/category-management.ts", "src/app/pages/category-management/category-management.spec.ts"],
  "sourcesContent": ["<div class=\"container py-5\">\n  <h2>Category Management</h2>\n  <div class=\"card mb-3\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Add New Category</h5>\n      <form #categoryForm=\"ngForm\" (ngSubmit)=\"addCategory()\">\n        <div class=\"mb-3\">\n          <label for=\"name\" class=\"form-label\">Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"name\"\n            [(ngModel)]=\"newCategory.name\"\n            name=\"categoryName\"\n            required\n          >\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"description\" class=\"form-label\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            [(ngModel)]=\"newCategory.description\"\n            name=\"categoryDescription\"\n          ></textarea>\n        </div>\n        <button type=\"submit\" class=\"btn btn-warning\">Add Category</button>\n      </form>\n    </div>\n  </div>\n  <h3>Existing Categories</h3>\n  <div class=\"row\">\n    @for (category of categories; track category.id) {\n      <div class=\"col-md-4\">\n        <div class=\"card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ category.name }}</h5>\n            <p class=\"card-text\">{{ category.description || 'No description' }}</p>\n            <button class=\"btn btn-outline-warning me-2\" (click)=\"editCategory(category)\">Edit</button>\n            <button class=\"btn btn-danger\" (click)=\"deleteCategory(category.id)\">Delete</button>\n          </div>\n        </div>\n      </div>\n    }\n  </div>\n</div>", "/* src/app/pages/category-management/category-management.scss */\nbody {\n  background-color: #fff8e1;\n  font-family: \"Roboto\", sans-serif;\n}\n.hero {\n  background-color: rgba(255, 247, 216, 0.4941176471);\n}\nh2 {\n  color: #d97706;\n}\n.card-title {\n  color: #15803d;\n}\n.card-text {\n  color: #333;\n}\n.card-img-top {\n  height: 200px;\n  object-fit: cover;\n}\n.text-success {\n  color: #15803d !important;\n}\n.text-success:hover {\n  color: #14532d !important;\n}\n.btn-outline-warning {\n  border-color: #d97706;\n  color: #d97706;\n}\n.btn-outline-warning:hover {\n  background-color: #d97706;\n  color: #fff8e1;\n}\n.btn-warning {\n  background-color: #d97706;\n  border-color: #d97706;\n}\n.btn-warning:hover {\n  background-color: #14532d;\n  border-color: #14532d;\n  color: #fff8e1;\n}\n#beeBox,\n#beeBox1 {\n  position: absolute;\n  width: 95vw;\n  height: 100vh;\n  overflow: hidden;\n  z-index: 0;\n  top: 100px;\n}\n#beeBox {\n  left: 0;\n}\n#beeBox1 {\n  right: 0;\n}\n#bee,\n#bee1 {\n  width: 125px;\n  box-sizing: border-box;\n  will-change: transform;\n  position: absolute;\n}\n#bee1 {\n  right: 0;\n  top: 30vh;\n}\n/*# sourceMappingURL=category-management.css.map */\n", "import { Component, Inject, OnInit, PLATFORM_ID, ChangeDetectorRef } from '@angular/core';\nimport { Api, Category } from '../../services/api';\nimport { gsap } from 'gsap';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-category-management',\n  imports: [FormsModule, CommonModule, RouterModule],\n  templateUrl: './category-management.html',\n  styleUrls: ['./category-management.scss'],\n})\nexport class CategoryManagement implements OnInit {\n  categories: Category[] = [];\n  newCategory: Category = { id: 0, name: '', description: '' };\n  editMode = false;\n  editCategoryId: number | null = null;\n\n  constructor(\n    private apiService: Api, // Inject ApiService\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private cdRef: ChangeDetectorRef, // Inject ChangeDetectorRef\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.loadCategories();\n  }\n\n  // Add or update a category\n  addCategory() {\n    if (this.editMode && this.editCategoryId) {\n      this.apiService.updateCategory(this.editCategoryId, this.newCategory).subscribe(() => {\n        this.resetForm();\n        this.loadCategories();\n      });\n    } else {\n      this.apiService.addCategory(this.newCategory).subscribe(() => {\n        this.resetForm();\n        this.loadCategories();\n      });\n    }\n  }\n\n  // Edit a category\n  editCategory(category: Category) {\n    this.newCategory = { ...category };\n    this.editMode = true;\n    this.editCategoryId = category.id;\n  }\n\n  // Delete a category\n  deleteCategory(id: number) {\n    this.apiService.deleteCategory(id).subscribe(() => this.loadCategories());\n  }\n\n  // Reset form after add/update\n  resetForm() {\n    this.newCategory = { id: 0, name: '', description: '' };\n    this.editMode = false;\n    this.editCategoryId = null;\n  }\n\n  // Load all categories from the API\n  private loadCategories() {\n    // Directly call the API without zone.js\n    this.apiService.getCategories().subscribe((categories) => {\n      this.categories = categories;\n\n      if (isPlatformBrowser(this.platformId)) {\n        // Apply GSAP animation after categories are loaded\n        setTimeout(() => {\n          // Manually trigger change detection after API call\n          this.cdRef.detectChanges();\n\n          const cards = document.querySelectorAll('.card');\n          if (cards.length > 0) {\n            // Apply GSAP animation\n            gsap.from(cards, { opacity: 0, y: 20, duration: 0.5, stagger: 0.2 });\n          }\n        }, 0);\n      }\n    });\n  }\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { CategoryManagement } from './category-management';\n\ndescribe('CategoryManagement', () => {\n  let component: CategoryManagement;\n  let fixture: ComponentFixture<CategoryManagement>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [CategoryManagement]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(CategoryManagement);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,4BAAA;AAAA;AAAA,IAAAD,+BAAA;AAAA;AAAA;;;ICaa;;;;;;;AAbb;AACA;AACA;AACA;AACA;AACA;AAQO,IAAM,qBAAN,MAAME,oBAAkB;MAOnB;MACqB;MACrB;MACA;MATV,aAAyB,CAAA;MACzB,cAAwB,EAAE,IAAI,GAAG,MAAM,IAAI,aAAa,GAAE;MAC1D,WAAW;MACX,iBAAgC;MAEhC,YACU,YACqB,YACrB,OACA,gBAA8B;AAH9B,aAAA,aAAA;AACqB,aAAA,aAAA;AACrB,aAAA,QAAA;AACA,aAAA,iBAAA;MACP;MAEH,WAAQ;AACN,aAAK,eAAc;MACrB;;MAGA,cAAW;AACT,YAAI,KAAK,YAAY,KAAK,gBAAgB;AACxC,eAAK,WAAW,eAAe,KAAK,gBAAgB,KAAK,WAAW,EAAE,UAAU,MAAK;AACnF,iBAAK,UAAS;AACd,iBAAK,eAAc;UACrB,CAAC;QACH,OAAO;AACL,eAAK,WAAW,YAAY,KAAK,WAAW,EAAE,UAAU,MAAK;AAC3D,iBAAK,UAAS;AACd,iBAAK,eAAc;UACrB,CAAC;QACH;MACF;;MAGA,aAAa,UAAkB;AAC7B,aAAK,cAAc,mBAAK;AACxB,aAAK,WAAW;AAChB,aAAK,iBAAiB,SAAS;MACjC;;MAGA,eAAe,IAAU;AACvB,aAAK,WAAW,eAAe,EAAE,EAAE,UAAU,MAAM,KAAK,eAAc,CAAE;MAC1E;;MAGA,YAAS;AACP,aAAK,cAAc,EAAE,IAAI,GAAG,MAAM,IAAI,aAAa,GAAE;AACrD,aAAK,WAAW;AAChB,aAAK,iBAAiB;MACxB;;MAGQ,iBAAc;AAEpB,aAAK,WAAW,cAAa,EAAG,UAAU,CAAC,eAAc;AACvD,eAAK,aAAa;AAElB,cAAI,kBAAkB,KAAK,UAAU,GAAG;AAEtC,uBAAW,MAAK;AAEd,mBAAK,MAAM,cAAa;AAExB,oBAAM,QAAQ,SAAS,iBAAiB,OAAO;AAC/C,kBAAI,MAAM,SAAS,GAAG;AAEpB,4BAAK,KAAK,OAAO,EAAE,SAAS,GAAG,GAAG,IAAI,UAAU,KAAK,SAAS,IAAG,CAAE;cACrE;YACF,GAAG,CAAC;UACN;QACF,CAAC;MACH;;;6CA/DG,QAAM,MAAA,CAAC,WAAW,EAAA,CAAA,EAAA;;;;;AARV,yBAAkB,WAAA;MAN9B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,aAAa,cAAc,YAAY;QACjD,UAAA;;OAED;OACY,kBAAkB;;;;;ACb/B;;;AAEA,IAAAC;AAEA,aAAS,sBAAsB,MAAK;AAClC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,kBAAkB;SAC7B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,kBAAkB;AACpD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["category_management_default", "init_category_management", "CategoryManagement", "init_category_management"]
}
