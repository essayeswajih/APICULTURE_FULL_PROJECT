import{a as l,b as g}from"./chunk-K4ACYX5K.js";import{Bc as u,L as n,P as o,k as h,w as t,yc as p,zc as d}from"./chunk-EPDGJHWN.js";var b=(s=>(s.PENDING="pending",s.PROCESSING="processing",s.SHIPPED="shipped",s.DELIVERED="delivered",s))(b||{}),c=class a{constructor(e,r){this.http=e;this.authService=r}apiUrl=l.apiUrl;getAuthHeaders(){let e=this.authService.getToken();if(!e)throw new Error("No authentication token found");return new p({Authorization:`Bearer ${e}`})}handleError(e){let r="An unknown error occurred!";return e.error instanceof ErrorEvent?r=`Error: ${e.error.message}`:r=`Error ${e.status}: ${e.error?.detail||e.message}`,h(()=>new Error(r))}getCategories(){return this.http.get(`${this.apiUrl}/categories`).pipe(t(this.handleError))}addCategory(e){return this.http.post(`${this.apiUrl}/categories`,e,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}updateCategory(e,r){return this.http.put(`${this.apiUrl}/categories/${e}`,r,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}deleteCategory(e){return this.http.delete(`${this.apiUrl}/categories/${e}`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}getProducts(e,r,i){let s=new d;return e&&(s=s.set("category",e)),r&&(s=s.set("sortBy",r)),i&&(s=s.set("search",i)),this.http.get(`${this.apiUrl}/products`,{params:s}).pipe(t(this.handleError))}getProductById(e){return this.http.get(`${this.apiUrl}/products/${e}`).pipe(t(this.handleError))}addProduct(e){return this.http.post(`${this.apiUrl}/products`,e,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}updateProduct(e,r){return this.http.put(`${this.apiUrl}/products/${e}`,r,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}deleteProduct(e){return this.http.delete(`${this.apiUrl}/products/${e}`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}getOrders(){return this.http.get(`${this.apiUrl}/orders`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}updateOrderStatus(e,r){return this.http.put(`${this.apiUrl}/orders/orderStatus/${e}`,{status:r},{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}updateOrde(e,r){return this.http.put(`${this.apiUrl}/orders/${e}`,{order:r},{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}createOrder(e){return this.http.post(`${this.apiUrl}/orders`,e,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}deleteOrder(e){return this.http.delete(`${this.apiUrl}/orders/${e}`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}getUser(){return this.http.get(`${this.apiUrl}/auth/users/me`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}getOrderByCode(e){return this.http.get(`${this.apiUrl}/orders/orderCode/${e}`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}subscribeToNewsletter(e){return this.http.post(`${this.apiUrl}/subscribe_to_newsletter`,{email:e},{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}sendContactMessage(e,r,i,s){return this.http.post(`${this.apiUrl}/support-contact`,{name:e,email:r,sujet:i,message:s},{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}uploadImage(e){let r=new FormData;return r.append("file",e,e.name),this.http.post(`${this.apiUrl}/upload`,r,{headers:this.getAuthHeaders(),reportProgress:!0,observe:"events"}).pipe(t(this.handleError))}getAllImages(){return this.http.get(`${this.apiUrl}/images`,{headers:this.getAuthHeaders()}).pipe(t(this.handleError))}static \u0275fac=function(r){return new(r||a)(o(u),o(g))};static \u0275prov=n({token:a,factory:a.\u0275fac,providedIn:"root"})};export{b as a,c as b};
